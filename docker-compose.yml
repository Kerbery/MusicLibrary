#version: '3.4'

#services:
#  playlistservice:
#    image: ${DOCKER_REGISTRY-}playlistservice
#    build:
#      context: .
#      dockerfile: PlaylistService/PlaylistService/Dockerfile

#  trackservice:
#    image: ${DOCKER_REGISTRY-}trackservice
#    build:
#      context: .
#      dockerfile: TrackService/TrackService/Dockerfile
version: '3.4'
name: MusicLibrary

services:
  mongodb:
    image: mongo
    container_name: mongo
    ports:
      - 27017:27017
    volumes:
      - mongodbdata:/data/db

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - 5672:7672
      - 15672:15672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
    hostname: rabbitmq
      
  playlistservice:
    image: ${DOCKER_REGISTRY-}playlistservice
    container_name: playlistservice
    hostname: playlistservice
    build:
      context: .
      dockerfile: PlaylistService/PlaylistService/Dockerfile

  trackservice:
    image: ${DOCKER_REGISTRY-}trackservice
    container_name: trackservice
    hostname: trackservice
    build:
      context: .
      dockerfile: TrackService/TrackService/Dockerfile

  #frontend:
  #  container_name: frontend
  #  image: ${DOCKER_REGISTRY-}frontend
  #  build:
  #    context: .
  #    dockerfile: Frontend/Dockerfile
  #  ports:
  #    - "3000:80"
  #    - "3001:443"
  #  volumes:
  #    - ./src:/app/src

      
  apigateway:
    image: ${DOCKER_REGISTRY-}apigateway
    container_name: apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    links:
      - playlistservice
      - trackservice
    depends_on:
      - playlistservice
      - trackservice

  identityservice:
    image: ${DOCKER_REGISTRY-}identityservice
    container_name: identityservice
    hostname: identityservice
    build:
      context: .
      dockerfile: IdentityService/Dockerfile

  userprovider:
    image: ${DOCKER_REGISTRY-}userprovider
    container_name: userprovider
    hostname: userprovider
    build:
      context: .
      dockerfile: UserProvider/Dockerfile

volumes:
  mongodbdata:
  rabbitmqdata:


